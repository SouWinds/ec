// 颜色函数，可以获取颜色配置信息
@import './theme/fn.scss';
// 通过颜色名称获取颜色
@function c($args) {
  @return --color($args);
};


// 单位配置
$unit: rpx;
// 添加单位后缀
@function u($args) {
  @return $args + $unit;
};


// 文字大小配置
$font-sizes: (
  20: 20,
  24: 24,
  28: 28,
  32: 32,
  36: 36,
  40: 40,
  44: 44,
);
// 遍历字体大小
@each $sizeKey, $size in $font-sizes {
  .fs#{$sizeKey} {
    font-size: u($size);
  }
  .lh#{$sizeKey} {
    line-height: u($size);
  }
};


// 缩放
$scale: (
  '03':0.3,
  '05':0.5,
  '07':0.7,
  '09':0.9,
  10:1,
  13:1.3,
  15:1.5,
  17:1.7,
  19:1.9,
  20:2,
  30:3,
);
// 遍历字体大小
@each $scaleKey, $scale in $scale {
  .scl#{$scaleKey} {
    transform: scale($scale);
  }
};


// 文字大小配置
$font-weight: (
  1: 100,
  2: 200,
  3: 300,
  4: 400,
  5: 500,
  6: 600,
  7: 700,
  8: 800,
  9: 999,
);
// 遍历字体大小
@each $weightKey, $weight in $font-weight {
  .fw#{$weightKey} {
    font-weight: $weight;
  }
};



// 内边距配置
$padding: (
  0: 0,
  4: 4,
  8: 8,
  16: 16,
  32: 32,
  64: 64,
  128: 128,
);
// 内边距方向配置
$directions: (
  l: 'left',
  r: 'right',
  b: 'bottom',
  t: 'top',
);
// 遍历内外边距大小
@each $paddingKey, $pad in $padding {
  .p#{$paddingKey} {
    padding: u($pad);
  }
  .m#{$paddingKey} {
    margin: u($pad);
  }
  @each $directionKey, $direction in $directions {
    .p#{$directionKey}#{$paddingKey} {
      padding-#{$direction}: u($pad) !important;
    }
    .m#{$directionKey}#{$paddingKey} {
      margin-#{$direction}: u($pad) !important;
    }
  }
};
@each $directionKey, $direction in $directions {
  .ta#{$directionKey} {
    text-align: $direction !important;
  }
};
.tac {
  text-align: center;
};

// 圆角边框配置
$border-radiuss: (
  s: 8,
  m: 12,
  l: 16,
  c: 99999,
);
// 生成圆角边框大小
@each $radiusKey, $radius in $border-radiuss {
  .bodr#{$radiusKey} {
    border-radius: u($radius);
  };
}


// 纯色颜色配置
$color-else-range: (
    '05':0.05,
    '1':0.1,
    '2':0.2,
    '3':0.3,
    '4':0.4,
    '5':0.5,
    '6':0.6,
    '7':0.7,
    '8':0.8,
    '9':0.9,
    '10':1,
);
// 任意色文字 & 背景色
@each $colorKey, $color in $color-else-range {
  .ctw#{$colorKey} {
    color: rgba(255, 255, 255, $color);
  }
  .ctb#{$colorKey} {
    color: rgba(0, 0, 0, $color);
  }
  .cfw#{$colorKey} {
    background-color: rgba(255, 255, 255, $color);
  }
  .cfb#{$colorKey} {
    background-color: rgba(0, 0, 0, $color);
  }
  .cbb#{$colorKey} {
    border-color:  rgba(0, 0, 0, $color);
  }
  .cbw#{$colorKey} {
    border-color: rgba(255, 255, 255, $color);
  }
};
// 颜色名称
$color-name: (
  p: var(--primary),
  s: var(--success),
  n: var(--notice),
  d: var(--dange),
  i: var(--info),
);

@each $colorKey, $color in $color-name {
  .ct#{$colorKey} {
    color: $color;
  }
  .cf#{$colorKey} {
    background-color: $color;
  }
  .cb#{$colorKey} {
    border-color: $color;
  }
}


// 宽度高度
.wh100p {
  width: 100%;
  height: 100%;
}
.w100p {
  width: 100%;
}
.h100p {
  height: 100%;
}
.h100v {
  height: 100vh;
}
$heights: (
  10: 10,
  20: 20,
  30: 30,
  40: 40,
  50: 50,
  60: 60,
  70: 70,
  80: 80,
  90: 90,
  100: 100,
);
@each $heightKey, $height in $heights {
  .h#{$heightKey} {
    height: u($height);
  }
  .w#{$heightKey} {
    width: u($height);
  }
};

.bszb {
  box-sizing: border-box;
}


// @each $colorNameKey, $colorName in $color-name {
//   .ct#{$colorNameKey}#{$colorKey} {
//     color: c($colorName + '');
//   }
// };
// 纯白颜色
.ctw {
  color:rgba(255,255,255,1)
}
// 纯黑颜色
.ctb {
  color:rgba(0,0,0,1)
}
// 背景白颜色
.cfw {
  background-color:rgba(255,255,255,1)
}
// 背景纯黑颜色
.cfb {
  background-color:rgba(0,0,0,1)
}

.omit {
  white-space: nowrap;
  text-overflow: ellipsis;
  overflow: hidden;
}


// for $key, $value in $color-else-range
//   .ct{$key}
//     color: $value

// // 任意色填充
// for $key, $value in $color-else-range
//   .cf{$key}
//     background-color: $value

// // 白色填充色
// for $key, $value in $color-white-range
//   .cfw{$key}
//     background-color: rgba(255,255,255,$value)

// // 白色文字
// for $key, $value in $color-white-range
//   .ctw{$key}
//     color: rgba(255,255,255,$value)

// // 黑色填充色
// for $key, $value in $color-black-range
//   .cfb{$key}
//     background-color: rgba(0,0,0,$value)

// // 黑色文字
// for $key, $value in $color-black-range
//   .ctb{$key}
//     color: rgba(0,0,0,$value)